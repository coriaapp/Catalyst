import { KeyPair, EncryptedAsymmetricX25519, EncryptedSymmetricX25519 } from '../types';
/**
 * Generate public/private key pairs
 *
 * @returns public/private key pair
 */
export declare function generateKeyPair(): KeyPair;
/**
 * Generate 65-byte uncompressed public key from private key
 *
 * @returns public key
 */
export declare function getPublicKey(privateKey: Uint8Array): Uint8Array;
/**
 * Asymmetric encrypt bytes
 *
 * @returns encrypted data
 */
export declare function asymmetricEncrypt(publicKey: Uint8Array, data: Uint8Array): Promise<EncryptedAsymmetricX25519>;
/**
 * Asymmetric decrypt bytes
 *
 * @returns decrypted bytes
 */
export declare function asymmetricDecrypt(privateKey: Uint8Array, encryptedData: EncryptedAsymmetricX25519): Promise<Uint8Array>;
/**
 * Symmetric encrypt bytes
 *
 * @returns encrypt data
 */
export declare function symmetricEncrypt(privateKey: Uint8Array, data: Uint8Array): Promise<EncryptedSymmetricX25519>;
/**
 * Symmetric decrypt bytes
 *
 * @returns decrypted bytes
 */
export declare function symmetricDecrypt(privateKey: Uint8Array, encryptedData: EncryptedSymmetricX25519): Promise<Uint8Array>;
/**
 * Asymmetric encrypt string data as a given encoding (hex/base64). Defaults to base64.
 *
 * @returns encrypted data as hex
 */
export declare function asymmetricEncryptToEncoding(publicKey: Uint8Array, data: string, encoding?: 'base64' | 'hex'): Promise<string>;
/**
 * Asymmetric decrypt data from given encoding (hex/base64). Defaults to base64.
 *
 * @returns decrypted string
 */
export declare function asymmetricDecryptFromEncoding(privateKey: Uint8Array, hex: string, encoding?: 'base64' | 'hex'): Promise<string>;
/**
 * Symmetric encrypt string data as a given encoding (hex/base64). Defaults to base64.
 *
 * @returns encrypted data as encoding
 */
export declare function symmetricEncryptToEncoding(publicKey: Uint8Array, data: string, encoding?: 'base64' | 'hex'): Promise<string>;
/**
 * Symmetric decrypt data from given encoding (hex/base64). Defaults to base64.
 *
 * @returns decrypted string
 */
export declare function symmetricDecryptFromEncoding(privateKey: Uint8Array, hex: string, encoding?: 'base64' | 'hex'): Promise<string>;
//# sourceMappingURL=x25519-xsalsa20-poly1305.d.ts.map